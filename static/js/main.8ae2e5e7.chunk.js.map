{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","toDoArr","setToDoArr","inProgArr","setInProgArr","doneArr","setDoneArr","moveCardIndex","setMoveCardIndex","moveCardType","setMoveCardType","removeCard","e","cardType","target","getAttribute","arrIndex","console","log","splice","moveCard","selectSection","section","card","parentNode","push","className","href","id","onClick","map","item","i","toString","data-card","data-value","data-name","data-index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ae2e5e7.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from \"react\";\n\nexport default function App() {\n\n  const [toDoArr, setToDoArr] = useState([\n    \"Kanban Card 1\",\n    \"Kanban Card 2\",\n    \"Kanban Card 3\"\n  ])\n\n  const [inProgArr, setInProgArr] = useState([\n    \"Kanban Card 4\",\n    \"Kanban Card 5\"\n  ])\n\n  const [doneArr, setDoneArr] = useState([\n    \"Kanban Card 6\"\n  ])\n\n  const [moveCardIndex, setMoveCardIndex] = useState();\n\n  const [moveCardType, setMoveCardType] = useState(\"\");\n\n  const addCard = (e) => {\n    toDoArr.push(\"Kanban Card\")\n    setToDoArr([...toDoArr])\n    console.log(toDoArr)\n  }\n\n  const removeCard = (e) => {\n    const cardType = e.target.getAttribute(\"data-name\");\n    const arrIndex = e.target.getAttribute(\"data-index\")\n    console.log(cardType, arrIndex)\n    switch (cardType) {\n      case \"toDo\":\n        toDoArr.splice(arrIndex, 1);\n        setToDoArr([...toDoArr])\n        break;\n      case \"inProg\":\n        inProgArr.splice(arrIndex, 1);\n        setInProgArr([...inProgArr])\n        break;\n      case \"done\":\n        doneArr.splice(arrIndex, 1)\n        setDoneArr([...doneArr])\n        break;\n      default:\n        console.log(\"no card type\")\n        break;\n    }\n  }\n\n  const moveCard = (e) => {\n    const cardType = e.target.getAttribute(\"data-name\");\n    const arrIndex = e.target.getAttribute(\"data-index\");\n    setMoveCardIndex(arrIndex);\n    setMoveCardType(cardType);\n  }\n\n  const selectSection = (e) => {\n    const section = e.target.getAttribute(\"data-value\")\n    const card = e.target.parentNode.getAttribute(\"data-card\")\n    switch (section) {\n      case \"toDo\":\n        if (moveCardType === \"inProg\") {\n          inProgArr.splice(moveCardIndex, 1)\n        } else if (moveCardType === \"done\") {\n          doneArr.splice(moveCardIndex, 1)\n        }\n        toDoArr.push(card)\n        setToDoArr([...toDoArr])\n        break;\n      case \"inProg\":\n        if (moveCardType === \"toDo\") {\n          toDoArr.splice(moveCardIndex, 1)\n        } else if (moveCardType === \"done\") {\n          doneArr.splice(moveCardIndex, 1)\n        }\n        inProgArr.push(card)\n        setInProgArr([...inProgArr])\n        break;\n      case \"done\":\n        if (moveCardType === \"toDo\") {\n          toDoArr.splice(moveCardIndex, 1)\n        } else if (moveCardType === \"inProg\") {\n          inProgArr.splice(moveCardIndex, 1)\n        }\n        doneArr.push(card)\n        setDoneArr([...doneArr])\n        break;\n      default:\n        break;\n    }\n    setMoveCardIndex(\"\");\n    setMoveCardType(\"\");\n  }\n\n  return (\n    <div className=\"container\">\n\n      <main className=\"main\">\n        <h1 className=\"title\">\n          Welcome to <a href=\"https://nextjs.org\">Kanban!</a>\n        </h1>\n\n        <p>\n          <button id=\"addCardBtn\" onClick={addCard}>\n            Add Card\n          </button>\n        </p>\n\n        <div className=\"grid\">\n          <ul className=\"column\">\n            <h4>To Do</h4>\n            {toDoArr.map((item, i) => {\n              return <li className=\"card\" key={i}>\n                {item}\n                <div className=\"btnContainer\">\n                  {moveCardIndex === i.toString() && moveCardType === \"toDo\" ? (\n                    <div data-card={item}>\n                      <button data-value=\"inProg\" onClick={selectSection}>In Progress</button>\n                      <button data-value=\"done\" onClick={selectSection}>Done</button>\n                    </div>\n                  ) : (\n                      <button className=\"moveCardBtn\" data-name=\"toDo\" data-index={i} onClick={moveCard}>Move</button>\n                    )}\n                  <button className=\"removeCardBtn\" data-name=\"toDo\" data-index={i} onClick={removeCard}>Remove</button>\n                </div>\n              </li>\n            })}\n          </ul>\n          <ul className=\"column\">\n            <h4>In Progress</h4>\n            {inProgArr.map((item, i) => {\n              return <li className=\"card\" key={i}>\n                {item}\n                <div className=\"btnContainer\">\n                  {moveCardIndex === i.toString() && moveCardType === \"inProg\" ? (\n                    <div data-card={item}>\n                      <button data-value=\"toDo\" onClick={selectSection}>To Do</button>\n                      <button data-value=\"done\" onClick={selectSection}>Done</button>\n                    </div>\n                  ) : (\n                      <button className=\"moveCardBtn\" data-name=\"inProg\" data-index={i} onClick={moveCard}>Move</button>\n                    )}\n                  <button className=\"removeCardBtn\" data-name=\"inProg\" data-index={i} onClick={removeCard}>Remove</button>\n                </div>\n              </li>\n            })}\n          </ul>\n          <ul className=\"column\">\n            <h4>Done</h4>\n            {doneArr.map((item, i) => {\n              return <li className=\"card\" key={i}>\n                {item}\n                <div className=\"btnContainer\">\n                  {moveCardIndex === i.toString() && moveCardType === \"done\" ? (\n                    <div data-card={item}>\n                      <button data-value=\"toDo\" onClick={selectSection}>To Do</button>\n                      <button data-value=\"inProg\" onClick={selectSection}>In Progress</button>\n                    </div>\n                  ) : (\n                      <button className=\"moveCardBtn\" data-name=\"done\" data-index={i} onClick={moveCard}>Move</button>\n                    )}\n                  <button className=\"removeCardBtn\" data-name=\"done\" data-index={i} onClick={removeCard}>Remove</button>\n                </div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </main>\n    </div>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}